var C=880,h=640,Y=BigInt(6),w=BigInt(7),o=Y*w,U=640/Number(Y),L=U,g=0;var R=4,W=5,p=6,u=7,T=1000,t=1000;class j{static images=[];static sounds=[];static loadImage(q,J,Q){let V=new Image;if(V.src=`assets/${q}`,J!==null)V.width=Number(J);if(Q!==null)V.height=Number(Q);return this.images.push(V),this.images.length-1}static loadSound(q,J){return this.sounds.push([new Audio(`assets/${q}`),Math.max(J,0)]),this.sounds.length-1}static percentLoaded(){let q=0,J;for(J=0;J<this.images.length;++J)q+=Number(this.images[J].complete);for(J=0;J<this.sounds.length;++J)q+=Number(this.sounds[J][0].readyState===4);return q/(this.images.length+this.sounds.length)}static playSound(q){if(q<this.sounds.length&&q>=0){const[J,Q]=this.sounds[q];J.currentTime=Q,J.play()}else console.error(`Sound index ${q} out of bounds for ${this.sounds.length} sounds loaded.`)}}class F{static mouseDown;static x;static y;static downX;static downY;static upX;static upY;static shouldHandleMouseEvent;static init(q){this.x=0,this.y=0,this.downX=0,this.downY=0,this.upX=0,this.upY=0,this.mouseDown=!1,this.shouldHandleMouseEvent=!1,q.addEventListener("mousemove",(J)=>{this.x=J.x-q.offsetLeft,this.y=J.y-q.offsetTop}),q.addEventListener("mousedown",(J)=>{this.downX=J.x-q.offsetLeft,this.downY=J.y-q.offsetTop,this.mouseDown=!0}),q.addEventListener("mouseup",(J)=>{this.upX=J.x-q.offsetLeft,this.upY=J.y-q.offsetTop,this.shouldHandleMouseEvent=!0,this.mouseDown=!1})}}class S{canvas;ctx;sceneIndex;scenes;constructor(q,J,Q,V){this.scenes=q,this.sceneIndex=J,this.canvas=document.createElement("canvas"),this.canvas.setAttribute("id","canvas"),this.canvas.setAttribute("width",`${Q}`),this.canvas.setAttribute("height",`${V}`),document.getElementById("canvashere").appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),F.init(this.canvas);for(let $=0;$<q.length;++$)q[$].canvas=this.canvas}start(){const q=document.createElement("progress");q.max=1,q.value=0,document.getElementById("canvashere").appendChild(q);const J=()=>{if(q.value=j.percentLoaded(),q.value!==1)window.requestAnimationFrame(J);else{q.hidden=!0;let Q=(new Date()).getTime(),V=0;const $=(K)=>{V=K-Q,Q=K;const z=this.scenes[this.sceneIndex].update(V);if(z!==-1)this.sceneIndex=z;this.scenes[this.sceneIndex].render(this.ctx),window.requestAnimationFrame($)};window.requestAnimationFrame($)}};window.requestAnimationFrame(J)}}class X{canvas=null}function b(q,J,Q,V,$,K,z){q.font=$,q.fillStyle=K,q.strokeStyle=z,q.lineWidth=8,q.lineJoin="round",q.miterLimit=2,q.strokeText(J,Q,V),q.fillText(J,Q,V)}class D extends X{playButtonX;playButtonY;playButtonWidth;playButtonHeight;playButtonColor;playButtonRegularColor;playButtonHighlightColor;constructor(){super();this.playButtonX=h/2-76,this.playButtonY=C/2,this.playButtonWidth=150,this.playButtonHeight=90,this.playButtonRegularColor="#FCD534",this.playButtonHighlightColor="White",this.playButtonColor=this.playButtonRegularColor}update(q){if(F.x>=this.playButtonX&&F.x<=this.playButtonX+this.playButtonWidth&&F.y<=this.playButtonY+15&&F.y>=this.playButtonY-this.playButtonHeight){if(this.playButtonColor=this.playButtonHighlightColor,F.mouseDown)return 1}else this.playButtonColor=this.playButtonRegularColor;return-1}render(q){b(q,"Match 3",10,150,"150px Monaco","#FCD534","White"),b(q,"Play",h/2-76,C/2,"60px Monaco",this.playButtonColor,"Black");const J=200;q.drawImage(j.images[1],(h-J)/5,600,J,J),q.drawImage(j.images[0],(h-U)/2,550)}}function i(q,J){return Math.floor(Math.random()*(J-q+1)+q)}function m(q,J){return Math.random()*(J-q+1)+q}function y(){return Math.sign(Math.random()-0.5)}function M(q){return q>=BigInt(0)?q:BigInt(-q)}function J0(q){const J=q<<f*l&q<<f*c,Q=q&q<<f*l,V=q&J,$=J&q<<f*q0,K=q<<f-Z&J,z=J&q<<f*A-Z,N=q<<f+Z&J,P=J&q<<f*A+Z,d=Q&q<<f+Z,s=Q&q<<f-Z,O=q>>Z&q>>l,E=q&q>>l,x=q<<f&O,G=q<<Z&O,n=q>>f&O,a=q>>c-f&O,B=q>>A&O,_=q>>f+c&O,I=q>>Z-f&E,e=q>>Z+f&E;return(V|$|K|z|N|P|d|s|x|G|n|a|B|_|I|e)>k}var k=BigInt(0),Z=BigInt(1),l=BigInt(2),c=BigInt(3),A=BigInt(4),q0=BigInt(5),f=BigInt(9),u0=BigInt(45);class v{boards;static calls=0;constructor(q=void 0){this.boards=[];for(let J=0;J<u;++J)this.boards.push(k);if(q!==void 0){if(q.length!==Number(w*Y))throw new Error(`Invalid board dimension: ${q.length}`);let J,Q;for(let V=k;V<w;++V)for(let $=k;$<Y;++$)J=Number(V*Y+$),Q=$*f+V,this.boards[q[J]]|=Z<<Q}}copy(){const q=new v;for(let J=0;J<u;++J)q.boards[J]=this.boards[J];return q}clear(){for(let q=0;q<u;++q)this.boards[q]=k}validMoveExists(){for(let q=0;q<u;++q)if(J0(this.boards[q]))return!0;return!1}runSwitch(q,J,Q,V){if(q==Q&&M(J-V)===Z||J==V&&M(q-Q)===Z){const $=Z<<q*f+J,K=Z<<Q*f+V,z=this.getType(q,J),N=this.getType(Q,V);if(z===-1||N===-1)return!1;if(this.boards[z]^=$,this.boards[z]|=K,this.boards[N]^=K,this.boards[N]|=$,this.connect3Exists(z)||this.connect3Exists(N))return!0;this.boards[z]|=$,this.boards[z]^=K,this.boards[N]|=K,this.boards[N]^=$}return!1}updateBoard(){if(this.fill())return-1;return this.findConnect3()}getType(q,J){const Q=Z<<q*f+J;for(let V=0;V<u;++V)if((this.boards[V]&Q)!=k)return V;return-1}fill(){let q=!1,J;for(let Q=k;Q<w;++Q)for(let V=k;V<Y;++V){const $=Q+V*f;for(J=0;J<u;++J)if((this.boards[J]&Z<<$)!=k)break;if(J==u){if(q=!0,Q==k){const K=i(0,Number(u)-1);this.boards[K]|=Z<<$}}else{q=!0;const K=Z<<$-Z;for(let z=0;z<u;++z)if((this.boards[z]&K)!=k){this.boards[z]|=Z<<$,this.boards[z]^=K;break}}}return q}findConnect3(){let q,J,Q,V=0;for(let $=0;$<u;++$){const K=this.boards[$],z=K&K<<f&K<<f*l,N=K&K<<Z&K<<l;if(z>0)for(J=k;J<Y;++J){let P=J*f;for(Q=k;Q<w;++Q)if(q=P+Q,(z&Z<<q)!==k)this.boards[$]&=~(Z<<q),this.boards[$]&=~(Z<<q-f),this.boards[$]&=~(Z<<q-l*f),V+=3}if(N>0)for(J=k;J<Y;++J){let P=J*f;for(Q=k;Q<w;++Q)if(q=P+Q,(N&Z<<q)!==k)this.boards[$]&=~(Z<<q),this.boards[$]&=~(Z<<q-Z),this.boards[$]&=~(Z<<q-l),V+=3}if(V>0)break}return V}connect3Exists(q){const J=this.boards[q];return(J&J<<Z&J<<l|J&J<<f&J<<f*l)>0}strHash(){return this.boards.join("")}movePiecesDown(){let q=!1;for(let J=k;J<w-Z;++J)for(let Q=k;Q<Y;++Q){const V=this.getType(Q,J),$=this.getType(Q,J+Z);if(V!=-1&&$==-1){const K=Q*f+J;this.boards[V]^=Z<<K,this.boards[V]|=Z<<K+Z,q=!0}}return q}treeSearchUpdateBoard(){let q=this.findConnect3();while(this.movePiecesDown())q+=this.findConnect3();return q}validNextBoards(){let q=[];const J=w-Z;let Q=Y-Z;for(let V=k;V<J;++V)for(let $=k;$<Q;++$){let K=this.copy();if(K.runSwitch($,V,$+Z,V)){if(q.push(K),K=this.copy(),K.runSwitch($,V,$,V+Z))q.push(K)}else if(K.runSwitch($,V,$,V+Z))q.push(K)}return q}_treeSearch(q){v.calls++;let J=this.treeSearchUpdateBoard();if(!this.validMoveExists())return J;let Q=this.validNextBoards();for(let V=0;V<Q.length;++V){const $=Q[V],K=$.strHash();if(!q.has(K))J+=$._treeSearch(q),q.add(K)}return J}treeSearch(){return this._treeSearch(new Set)}print(q){const J=this.boards[q];for(let Q=k;Q<BigInt(7);++Q){let V="";for(let $=k;$<BigInt(6);++$){const K=$*f+Q;if((J&Z<<K)!=k)V+="1";else V+="0"}console.log(V)}}printBoard(){for(let q=k;q<w;++q){let J="";for(let Q=k;Q<Y;++Q){const V=this.getType(Q,q);if(V===-1)J+=" ";else J+=`${V}`}console.log(J)}}}class r{particles;acceleration;elapsed;constructor(q){this.elapsed=0,this.particles=[],this.acceleration=[];for(let J=0;J<q;++J)this.particles.push([0,0]),this.acceleration.push([0,0])}reset(){this.elapsed=0;const q=this.particles.length;for(let J=0;J<q;++J)this.particles[J][0]=h/2,this.particles[J][1]=C/2,this.acceleration[J][0]=m(0.1,10)*y(),this.acceleration[J][1]=m(0.1,10)*y()}update(q){const J=this.particles.length;for(let Q=0;Q<J;++Q)this.particles[Q][0]+=this.acceleration[Q][0],this.particles[Q][1]+=this.acceleration[Q][1];return this.elapsed+=q,this.elapsed>t}render(q){const J=this.particles.length;q.fillStyle="white";for(let Q=0;Q<J;++Q)q.beginPath(),q.arc(this.particles[Q][0],this.particles[Q][1],10,0,2*Math.PI),q.fill()}}class H extends X{brd;state;score;timeOut;explosion;constructor(){super();this.brd=new v,this.state=R,this.score=0,this.timeOut=0,this.explosion=new r(T)}render(q){q.drawImage(j.images[j.images.length-1],0,0,h,C);let J,Q;const[V,$,K,z]=this.getMouseCoordinated();for(J=0;J<w;++J)for(Q=0;Q<Y;++Q){const P=this.brd.getType(BigInt(Q),BigInt(J));if(P==-1)continue;if(F.mouseDown&&V==Q&&$==J)continue;q.drawImage(j.images[P],Q*U,(J+1)*L,U,L)}if(F.mouseDown){const P=this.brd.getType(BigInt(V),BigInt($));if(P!==-1)q.drawImage(j.images[P],F.x-U/2,F.y-L/2,U,L)}if(this.state===p)this.explosion.render(q);const N=`Score: ${this.score}`;q.fillStyle="white",q.font="40px monospace",q.fillText(N,h/2.7,L/2)}update(q){switch(this.state){case R:this.checkBoardState();break;case W:this.timeOutState(q);break;case g:this.playerState();break;case p:this.explosionState(q);break;default:console.error(`Unhandled state '${this.state}'. The game is ruined.`);break}return-1}checkBoardState(){const q=this.brd.updateBoard();if(q===0)if(this.brd.validMoveExists())this.state=g;else this.brd.clear(),this.score+=Number(o),this.state=p,this.explosion.reset(),j.playSound(4);else if(this.score+=Math.max(0,q),this.timeOut=25,this.state=W,q!==-1)j.playSound(0)}timeOutState(q){if(this.timeOut<=0)this.state=R;else this.timeOut-=q}playerState(){if(F.shouldHandleMouseEvent){F.shouldHandleMouseEvent=!1;const[q,J,Q,V]=this.getMouseCoordinated();if(this.brd.runSwitch(BigInt(q),BigInt(J),BigInt(Q),BigInt(V)))this.timeOut=500,this.state=W}}explosionState(q){if(this.explosion.update(q))this.timeOut=250,this.state=W}getMouseCoordinated(){return[Math.floor(F.downX/U),Math.floor(F.downY/L)-1,Math.floor(F.upX/U),Math.floor(F.upY/L)-1]}}(()=>{j.loadImage("apple.png",Number(U),Number(L)),j.loadImage("bread.png",Number(U),Number(L)),j.loadImage("coconut.png",Number(U),Number(L)),j.loadImage("broccoli.png",Number(U),Number(L)),j.loadImage("milk.png",Number(U),Number(L)),j.loadImage("orange.png",Number(U),Number(L)),j.loadImage("star.png",Number(U),Number(L)),j.loadImage("bg.png",null,null),j.loadSound("success_1.wav",0),j.loadSound("success_2.wav",0),j.loadSound("success_3.wav",0),j.loadSound("success_4.wav",0),j.loadSound("explosion.wav",0),new S([new D,new H],0,h,C).start()})();
